package com.mycompany.projeto.monitoramento;

import java.util.concurrent.ThreadLocalRandom;


public class Monitoramento extends javax.swing.JFrame {
     Integer valor_cpu;
     Integer valor_ram;
     Integer valor_disco;
     
     Integer val_min_cpu;
     Integer val_max_cpu;
     Integer val_med_cpu;    
     Integer soma_cpu = 0;
     
     Integer val_min_ram;
     Integer val_max_ram;
     Integer val_med_ram;
     Integer soma_ram = 0;
     
     
     Integer val_min_disco;
     Integer val_max_disco;
     Integer val_med_disco;
     Integer soma_disco = 0;
     
     
     
     Integer contador = 0;
     
       public Monitoramento() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        prg_cpu = new javax.swing.JProgressBar();
        jLabel5 = new javax.swing.JLabel();
        prg_ram = new javax.swing.JProgressBar();
        prg_disco = new javax.swing.JProgressBar();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lbl_min_cpu = new javax.swing.JLabel();
        lbl_max_cpu = new javax.swing.JLabel();
        lbl_med_cpu = new javax.swing.JLabel();
        lbl_max_ram = new javax.swing.JLabel();
        lbl_min_ram = new javax.swing.JLabel();
        lbl_med_ram = new javax.swing.JLabel();
        lbl_max_disco = new javax.swing.JLabel();
        lbl_med_disco = new javax.swing.JLabel();
        lbl_min_disco = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jLabel6.setText("RELATÓRIO");

        jLabel20.setText("%");

        jLabel21.setText("%");

        jLabel22.setText("%");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 17));

        jLabel1.setText("CPU");

        jLabel2.setText("RAM");

        jLabel3.setText("DISCO");

        jLabel4.setFont(new java.awt.Font("Gloucester MT Extra Condensed", 0, 30)); // NOI18N
        jLabel4.setText("Relatório");

        jLabel5.setText("COMPONENTE");

        jLabel8.setText("CPU");

        jLabel9.setText("RAM");

        jLabel10.setText("DISCO");

        jLabel7.setFont(new java.awt.Font("Gloucester MT Extra Condensed", 0, 30)); // NOI18N
        jLabel7.setText("Dashboard");

        jLabel11.setText("MIN");

        jLabel12.setText("MAX");

        jLabel13.setText("MED");

        lbl_min_cpu.setText("%");

        lbl_max_cpu.setText("%");

        lbl_med_cpu.setText("%");

        lbl_max_ram.setText("%");

        lbl_min_ram.setText("%");

        lbl_med_ram.setText("%");

        lbl_max_disco.setText("%");

        lbl_med_disco.setText("%");

        lbl_min_disco.setText("%");

        jButton1.setText("Pegar Amostra");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prg_ram, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(prg_cpu, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(prg_disco, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lbl_min_cpu)
                                    .addGap(42, 42, 42)
                                    .addComponent(lbl_max_cpu)
                                    .addGap(13, 13, 13)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_min_ram)
                                    .addComponent(lbl_min_disco))
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbl_max_ram, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_max_disco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(lbl_med_cpu)
                            .addComponent(lbl_med_ram)
                            .addComponent(lbl_med_disco)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(jButton1)))
                .addContainerGap(114, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(103, 103, 103)
                    .addComponent(jLabel7)
                    .addContainerGap(473, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(lbl_min_cpu)
                            .addComponent(lbl_max_cpu)
                            .addComponent(lbl_med_cpu))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(lbl_max_ram)
                            .addComponent(lbl_med_ram)
                            .addComponent(lbl_min_ram)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(prg_cpu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(34, 34, 34)
                            .addComponent(prg_ram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(prg_disco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(lbl_med_disco)
                        .addComponent(lbl_min_disco)
                        .addComponent(lbl_max_disco))
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(160, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(22, 22, 22)
                    .addComponent(jLabel7)
                    .addContainerGap(336, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        contador++;
          
            valor_cpu = ThreadLocalRandom.current().nextInt(1, 101);
            valor_ram = ThreadLocalRandom.current().nextInt(1, 101);
            valor_disco = ThreadLocalRandom.current().nextInt(1, 101);
            
            prg_cpu.setValue(valor_cpu);
            prg_ram.setValue(valor_ram);
            prg_disco.setValue(valor_disco);
            
  

        //VALORES MÁXIMO E MINIMO CPU 
        if (val_max_cpu == null &&
            val_min_cpu == null &&
            val_max_ram == null &&
            val_min_ram == null &&
            val_max_disco == null &&
            val_min_disco == null ) {
            
            val_max_cpu = valor_cpu;
            val_min_cpu = valor_cpu; 
            
            val_max_ram = valor_ram;
            val_min_ram = valor_ram;
            
            val_max_disco = valor_disco;
            val_min_disco = valor_disco;
            
            lbl_max_cpu.setText(val_max_cpu.toString());
            lbl_min_cpu.setText(val_min_cpu.toString());
            lbl_max_ram.setText(val_max_ram.toString());
            lbl_min_ram.setText(val_min_ram.toString());
            lbl_max_disco.setText(val_max_disco.toString());
            lbl_min_disco.setText(val_min_disco.toString());
    
        }
            soma_cpu = soma_cpu + valor_cpu;
            val_med_cpu = soma_cpu / contador;
        
            soma_ram += valor_ram;
            val_med_ram = soma_ram / contador;  

            soma_disco += valor_disco;
            val_med_disco = soma_disco / contador;
        
            
        
        
        if (valor_cpu > val_max_cpu) {
                val_max_cpu = valor_cpu;
                lbl_max_cpu.setText(val_max_cpu.toString());
        }   
        if (valor_cpu < val_min_cpu){
                val_min_cpu = valor_cpu;
                lbl_min_cpu.setText(val_min_cpu.toString());
                
         }
        
        if (valor_ram > val_max_ram) {
                val_max_ram = valor_ram;
                lbl_max_ram.setText(val_max_ram.toString());
        }   
        if (valor_ram < val_min_ram){
                val_min_ram = valor_ram;
                lbl_min_ram.setText(val_min_ram.toString());
         }
        
        if (valor_disco > val_max_disco) {
                val_max_disco = valor_disco;
                lbl_max_disco.setText(val_max_disco.toString());
        }   
        if (valor_disco < val_min_disco){
                val_min_disco = valor_disco;
                lbl_min_disco.setText(val_min_disco.toString());
         }
      
        lbl_med_cpu.setText(val_med_cpu.toString());
        lbl_med_ram.setText(val_med_ram.toString());
        lbl_med_disco.setText(val_med_disco.toString()); 
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Monitoramento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Monitoramento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Monitoramento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Monitoramento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Monitoramento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lbl_max_cpu;
    private javax.swing.JLabel lbl_max_disco;
    private javax.swing.JLabel lbl_max_ram;
    private javax.swing.JLabel lbl_med_cpu;
    private javax.swing.JLabel lbl_med_disco;
    private javax.swing.JLabel lbl_med_ram;
    private javax.swing.JLabel lbl_min_cpu;
    private javax.swing.JLabel lbl_min_disco;
    private javax.swing.JLabel lbl_min_ram;
    private javax.swing.JProgressBar prg_cpu;
    private javax.swing.JProgressBar prg_disco;
    private javax.swing.JProgressBar prg_ram;
    // End of variables declaration//GEN-END:variables
}
